#!/usr/bin/env bash
set -Eeuo pipefail
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

# This script ties together all the individual sripts. This is convient when
# things are working well. During dev and debuggings, these scripts are
# intended to be run by themselves too.


# this script starts from scratch, so only taking in a directory to place the
# resultant files
if [[ "$#" -gt 2 ]] || [[ "$#" -eq 0 ]]; then
  echo "$0 dist_dir <chroot>"
  exit 1
fi

dst_dir="$1"
mkdir -p "$dst_dir"


if [ -z "${2-}" ]; then
  # todo: add some template to mktemp
  src_chroot=$(mktemp --tmpdir -d chroot.src.XXXX)
  new_chroot=true
else
  src_chroot="$2"
  new_chroot=false
fi

[[ $new_chroot == true ]] && "$DIR/bin/generate_chroot" "$src_chroot"
#"$DIR/bin/unmount_chroot" "$src_chroot"
echo "original chroot $src_chroot"

# even though the naive path would be to provison the chroot we just created,
# still copy it over incase we want to inspect the base chroot, or tweak
# something.

dist_chroot=$(mktemp --tmpdir -d chroot.dst.XXXX)
#"$DIR/bin/copy_chroot" "$src_chroot" "$dist_chroot"
dist_chroot=$src_chroot
echo "new chroot      $dist_chroot"

#"$DIR/bin/mount_chroot" "$dist_chroot"

# these modules are installed in the order given in the array.
modules=(
  inital_prep
  initramfs_tools
  babashka
  docker
  keepalived
  nomad_agent
  traefik
  consul_agent
  glusterfs
  mounts
  scheduled_reboot
  final_prep
)

mkdir -p "$dist_chroot/tmp"
sudo cp "$DIR/modules/_common.bash" "$dist_chroot/tmp/"
for module in "${modules[@]}"; do
  if [[ -f "${DIR}/modules/$module/setup" ]]; then
    "${DIR}/modules/$module/setup" "$dist_chroot"
  fi

  if [[ -f "${DIR}/modules/$module/install" ]]; then
    "$DIR/bin/provision_chroot" "$dist_chroot" "${DIR}/modules/$module/install"
  fi
done

#PIXZ_COMPRESSION_LEVEL=${PIXZ_COMPRESSION_LEVEL:-9}
echo "new chroot      $dist_chroot"
"$DIR/bin/unmount_chroot" "$dist_chroot"

# copy out kernel and initramfs
"$DIR/bin/copy_assets" "$dist_chroot" "$dst_dir"
#
## strip ramroot
#"$DIR/bin/strip_chroot" "$dist_chroot"
#
ramroot=$("$DIR/bin/package_chroot" "$dist_chroot")
sudo mv "$ramroot" "$dst_dir"
