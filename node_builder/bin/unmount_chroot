#!/usr/bin/env bash
set -Eeuo pipefail

usage() {
  echo "$0 <chroot>"
  echo "    output: none"
}

if [[ "$#" -ne 1 ]]; then
  usage
  exit 1
fi

chroot_dir="$1"

is_chroot_unmounted() {
  # there is probably a better wat to do this
  if mount | rg --quiet "$chroot_dir"; then
    return 1
  else
    return 0
  fi
}

#mounts=(
#"${chroot_dir}/proc"
#"${chroot_dir}/dev"
#"${chroot_dir}/sys"
#)
#
#for mount in "${mounts[@]}"; do
#  if mountpoint -q "$mount"; then sudo umount "$mount"; fi
#done

# bail early if things are looking good.
is_chroot_unmounted && exit 0

# todo: how to get this to not stop on error
set +e
mount | rg "$chroot_dir" | cut -d' ' -f3 | xargs -r -L1 sudo umount --recursive
set -e

# check if eveything was unmounted correctly
is_chroot_unmounted && exit 0
exit 1
