#!/usr/bin/env bash
set -Ee
set -x
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

MAX_HEALTY_LOOPS=15
MAX_READY_LOOPS=15
MAX_GLUSTER_LOOPS=40
SLEEP=15
STEP=1
STEPS=2

# these have entires in my ssh/config
default_nodes=(
  w1
  w2
  w3
)

glusterfs_health() {
  # todo: find a better check.
  ssh -F "$SCRIPT_DIR/../ssh_config" "$1" '[[ "$(gluster volume heal shared info | grep "Number of entries: 0" | wc -l)" -eq 3 ]]'
}

# can pass in nodes as args
nodes=("${@:-"${default_nodes[@]}"}")

for node in "${nodes[@]}"; do
  # is node ready to be rebooted?
  loop_count=1
  until glusterfs_health "$node"; do
    if [[ "$loop_count" -gt "$MAX_GLUSTER_LOOPS" ]]; then
      echo "Attempts exceeded. Exiting."
      exit 1
    fi
    echo "s:$STEP/$STEPS a:$loop_count/$MAX_GLUSTER_LOOPS - Waiting for $node to be ready (glusterfs replication)"
    sleep "$SLEEP"
    loop_count=$((loop_count+1))
  done
  echo "Gluster is healthy"


  ssh -F "${SCRIPT_DIR}/../ssh_config" "$node" nomad node drain -enable -yes -self
  echo "Rebooting $node"
  ssh -F "${SCRIPT_DIR}/../ssh_config" "$node" reboot || true

  # todo: break out of loop after so many iterations
  # todo: check glusterfs is replicated on node before rebooting
  # this just waits for the node to come up and be available
  loop_count=1
  until [[ $(curl --fail -s "${node}.dmz.509ely.com:4646/v1/agent/health" | jq '.client.ok') == "true" ]]; do
    if [[ "$loop_count" -gt "$MAX_READY_LOOPS" ]]; then
      echo "Attempts exceeded. Exiting."
      exit 1
    fi
    echo "s:$STEP/$STEPS a:$loop_count/$MAX_READY_LOOPS - Waiting for $node to be healthy (nomad)"
    sleep "$SLEEP"
    loop_count=$((loop_count+1))
  done
  step=$((step+1))

  echo "Getting $node's node_id"
  node_id=$(curl --fail -s w1.dmz.509ely.com:4646/v1/agent/self | jq -r '.stats.client.node_id')
  loop_count=1
  # todo: break out of loop after so many iterations
  until [[ $(curl --fail -s "${node}.dmz.509ely.com:4646/v1/node/$node_id" | jq -r '.Status') == "ready" ]]; do
    if [[ "$loop_count" -gt "$MAX_READY_LOOPS" ]]; then
      echo "Attempts exceeded. Exiting."
      exit 1
    fi
    echo "s:$STEP/$STEPS a:$loop_count/$MAX_HEALTY_LOOPS - Waiting for $node to be ready (nomad)"
    sleep "$SLEEP"
    loop_count=$((loop_count+1))
  done

  # check glusterFS is all good and replicated
  until glusterfs_health "$node"; do
    if [[ "$loop_count" -gt "$MAX_GLUSTER_LOOPS" ]]; then
      echo "Attempts exceeded. Exiting."
      exit 1
    fi
    echo "s:$STEP/$STEPS a:$loop_count/$MAX_GLUSTER_LOOPS - Waiting for $node to be ready (glusterfs replication)"
    sleep "$SLEEP"
    loop_count=$((loop_count+1))
  done
  echo "Gluster is healthy"

  echo "$node reports ready. Continuting to next node"
done
